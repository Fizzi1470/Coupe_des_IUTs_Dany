# This file was automagically generated by mbed.org.
# If you would like to add your own targets, create a
# project.cmake file locally in your project directory.

CMAKE_MINIMUM_REQUIRED(VERSION 3.9)
SET(CMAKE_SYSTEM_NAME Generic)

SET(CMAKE_NINJA_FORCE_RESPONSE_FILE 1 CACHE INTERNAL “”)

SET(ELF2BIN "arm-none-eabi-objcopy" CACHE STRING "" FORCE)
set(CMAKE_TRY_COMPILE_TARGET_TYPE "STATIC_LIBRARY")

# if the environment does not specify build type, set to Debug
IF(NOT CMAKE_BUILD_TYPE)
  set(CMAKE_BUILD_TYPE "Debug"
        CACHE STRING "Choose the type of build, options are: Debug Release RelWithDebInfo MinSizeRel."
        FORCE)
ENDIF()

# here starts the project
PROJECT(IUT_MBED_LPC1768 C CXX ASM)

# uncomment below to have a verbose build process
#SET(CMAKE_VERBOSE_MAKEFILE ON)

SET(LD_SYS_LIBS "-Wl,--start-group -lstdc++ -lsupc++ -lm -lc -lgcc -lnosys  -Wl,--end-group")

SET(CMAKE_C_FLAGS "-std=gnu11 -Wall -Wextra -Wno-unused-parameter -Wno-missing-field-initializers -fmessage-length=0 -fno-exceptions -fno-builtin -ffunction-sections -fdata-sections -funsigned-char -MMD -fno-delete-null-pointer-checks -fomit-frame-pointer -DMBED_DEBUG -DMBED_TRAP_ERRORS_ENABLED=1 -mcpu=cortex-m3 -mthumb -DMBED_ROM_START=0x0 -DMBED_ROM_SIZE=0x80000 -include mbed_config.h")
SET(CMAKE_CXX_FLAGS "-std=gnu++14 -fno-rtti -Wvla -Wall -Wextra -Wno-unused-parameter -Wno-missing-field-initializers -fmessage-length=0 -fno-exceptions -fno-builtin -ffunction-sections -fdata-sections -funsigned-char -MMD -fno-delete-null-pointer-checks -fomit-frame-pointer -DMBED_DEBUG -DMBED_TRAP_ERRORS_ENABLED=1 -mcpu=cortex-m3 -mthumb -DMBED_ROM_START=0x0 -DMBED_ROM_SIZE=0x80000  -include mbed_config.h")
SET(CMAKE_ASM_FLAGS "-x assembler-with-cpp -Wall -Wextra -Wno-unused-parameter -Wno-missing-field-initializers -fmessage-length=0 -fno-exceptions -fno-builtin -ffunction-sections -fdata-sections -funsigned-char -MMD -fno-delete-null-pointer-checks -fomit-frame-pointer -DMBED_DEBUG -DMBED_TRAP_ERRORS_ENABLED=1 -mcpu=cortex-m3 -mthumb  -include mbed_config.h")


SET(CMAKE_C_FLAGS_DEBUG "-O0 -g" CACHE STRING "" FORCE)
SET(CMAKE_CXX_FLAGS_DEBUG "-O0 -g" CACHE STRING "" FORCE)
SET(CMAKE_ASM_FLAGS_DEBUG "-O0 -g" CACHE STRING "" FORCE)

SET(CMAKE_C_FLAGS_MINSIZEREL "-Os -DNDEBUG" CACHE STRING "" FORCE)
SET(CMAKE_CXX_FLAGS_MINSIZEREL "-Os -DNDEBUG" CACHE STRING "" FORCE)
SET(CMAKE_ASM_FLAGS_MINSIZEREL "-Os -DNDEBUG" CACHE STRING "" FORCE)

SET(CMAKE_C_FLAGS_RELEASE "-O3 -DNDEBUG" CACHE STRING "" FORCE)
SET(CMAKE_CXX_FLAGS_RELEASE "-O3 -DNDEBUG" CACHE STRING "" FORCE)
SET(CMAKE_ASM_FLAGS_RELEASE "-O3 -DNDEBUG" CACHE STRING "" FORCE)

SET(CMAKE_C_FLAGS_RELWITHDEBINFO "-O2 -g -DNDEBUG" CACHE STRING "" FORCE)
SET(CMAKE_CXX_FLAGS_RELWITHDEBINFO "-O2 -g -DNDEBUG" CACHE STRING "" FORCE)
SET(CMAKE_ASM_FLAGS_RELWITHDEBINFO "-O2 -g -DNDEBUG" CACHE STRING "" FORCE)

SET(CMAKE_CXX_LINK_FLAGS "-Wl,--gc-sections -Wl,--wrap,main -Wl,--wrap,__malloc_r -Wl,--wrap,__free_r -Wl,--wrap,__realloc_r -Wl,--wrap,__memalign_r -Wl,--wrap,__calloc_r -Wl,--wrap,exit -Wl,--wrap,atexit -Wl,-n -mcpu=cortex-m3 -mthumb  -L${CMAKE_CURRENT_SOURCE_DIR}/mbed/TARGET_LPC1768/TOOLCHAIN_GCC_ARM -u_printf_float")
SET(CMAKE_CXX_LINK_FLAGS "${CMAKE_CXX_LINK_FLAGS} ${LD_SYS_LIBS} -T ${CMAKE_BINARY_DIR}/IUT_MBED_LPC1768_pp.link_script.ld")


ADD_DEFINITIONS(
    -DARM_MATH_CM3
    -DDEVICE_ANALOGIN=1
    -DDEVICE_ANALOGOUT=1
    -DDEVICE_CAN=1
    -DDEVICE_DEBUG_AWARENESS=1
    -DDEVICE_EMAC=1
    -DDEVICE_ETHERNET=1
    -DDEVICE_FLASH=1
    -DDEVICE_I2C=1
    -DDEVICE_I2CSLAVE=1
    -DDEVICE_INTERRUPTIN=1
    -DDEVICE_LOCALFILESYSTEM=1
    -DDEVICE_PORTIN=1
    -DDEVICE_PORTINOUT=1
    -DDEVICE_PORTOUT=1
    -DDEVICE_PWMOUT=1
    -DDEVICE_SEMIHOST=1
    -DDEVICE_SERIAL=1
    -DDEVICE_SERIAL_FC=1
    -DDEVICE_SLEEP=1
    -DDEVICE_SPI=1
    -DDEVICE_SPISLAVE=1
    -DDEVICE_STDIO_MESSAGES=1
    -DDEVICE_USTICKER=1
    -DMBED_BUILD_TIMESTAMP=1716920420.621708
    -DTARGET_CORTEX
    -DTARGET_CORTEX_M
    -DTARGET_DEBUG
    -DTARGET_LIKE_CORTEX_M3
    -DTARGET_LIKE_MBED
    -DTARGET_LPC1768
    -DTARGET_LPC176X
    -DTARGET_LPCTarget
    -DTARGET_M3
    -DTARGET_MBED_LPC1768
    -DTARGET_NXP
    -DTARGET_NXP_EMAC
    -DTOOLCHAIN_GCC
    -DTOOLCHAIN_GCC_ARM
    -D__CMSIS_RTOS
    -D__CORTEX_M3
    -D__MBED_CMSIS_RTOS_CM
    -D__MBED__=1
  )

INCLUDE_DIRECTORIES(
  mbed/platform
  mbed/hal
  mbed/drivers
  mbed/TARGET_LPC1768/TOOLCHAIN_GCC_ARM
  mbed
  include
  .
  )

FILE(GLOB_RECURSE sources ${CMAKE_SOURCE_DIR}/src/*.cpp)

# executable IUT_MBED_LPC1768
ADD_EXECUTABLE(IUT_MBED_LPC1768
  ${sources}
  mbed/TARGET_LPC1768/TOOLCHAIN_GCC_ARM/analogin_api.o
  mbed/TARGET_LPC1768/TOOLCHAIN_GCC_ARM/analogout_api.o
  mbed/TARGET_LPC1768/TOOLCHAIN_GCC_ARM/can_api.o
  mbed/TARGET_LPC1768/TOOLCHAIN_GCC_ARM/CRP.o
  mbed/TARGET_LPC1768/TOOLCHAIN_GCC_ARM/ethernet_api.o
  mbed/TARGET_LPC1768/TOOLCHAIN_GCC_ARM/except.o
  mbed/TARGET_LPC1768/TOOLCHAIN_GCC_ARM/flash_api.o
  mbed/TARGET_LPC1768/TOOLCHAIN_GCC_ARM/gpio_api.o
  mbed/TARGET_LPC1768/TOOLCHAIN_GCC_ARM/gpio_irq_api.o
  mbed/TARGET_LPC1768/TOOLCHAIN_GCC_ARM/i2c_api.o
  mbed/TARGET_LPC1768/TOOLCHAIN_GCC_ARM/mbed_board.o
  mbed/TARGET_LPC1768/TOOLCHAIN_GCC_ARM/mbed_fault_handler.o
  mbed/TARGET_LPC1768/TOOLCHAIN_GCC_ARM/mbed_retarget.o
  mbed/TARGET_LPC1768/TOOLCHAIN_GCC_ARM/mbed_sdk_boot.o
  mbed/TARGET_LPC1768/TOOLCHAIN_GCC_ARM/mbed_tz_context.o
  mbed/TARGET_LPC1768/TOOLCHAIN_GCC_ARM/pinmap.o
  mbed/TARGET_LPC1768/TOOLCHAIN_GCC_ARM/port_api.o
  mbed/TARGET_LPC1768/TOOLCHAIN_GCC_ARM/pwmout_api.o
  mbed/TARGET_LPC1768/TOOLCHAIN_GCC_ARM/rtc_api.o
  mbed/TARGET_LPC1768/TOOLCHAIN_GCC_ARM/serial_api.o
  mbed/TARGET_LPC1768/TOOLCHAIN_GCC_ARM/sleep.o
  mbed/TARGET_LPC1768/TOOLCHAIN_GCC_ARM/spi_api.o
  mbed/TARGET_LPC1768/TOOLCHAIN_GCC_ARM/startup_LPC17xx.o
  mbed/TARGET_LPC1768/TOOLCHAIN_GCC_ARM/system_LPC17xx.o
  mbed/TARGET_LPC1768/TOOLCHAIN_GCC_ARM/us_ticker.o
)

SET_TARGET_PROPERTIES(IUT_MBED_LPC1768 PROPERTIES ENABLE_EXPORTS 1)
# add syslibs dependencies to create the correct linker order
TARGET_LINK_LIBRARIES(IUT_MBED_LPC1768 -lstdc++ -lsupc++ -lm -lc -lgcc -lnosys -lmbed)

add_custom_command(TARGET IUT_MBED_LPC1768 PRE_LINK
                   COMMAND "arm-none-eabi-cpp" -E -P -Wl,--gc-sections -Wl,--wrap,main -Wl,--wrap,_malloc_r -Wl,--wrap,_free_r -Wl,--wrap,_realloc_r -Wl,--wrap,_memalign_r -Wl,--wrap,_calloc_r -Wl,--wrap,exit -Wl,--wrap,atexit -Wl,-n -mcpu=cortex-m3 -mthumb ./mbed/TARGET_LPC1768/TOOLCHAIN_GCC_ARM/LPC1768.ld -o ${CMAKE_CURRENT_BINARY_DIR}/IUT_MBED_LPC1768_pp.link_script.ld
                   WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}
                   BYPRODUCTS "${CMAKE_CURRENT_BINARY_DIR}/IUT_MBED_LPC1768_pp.link_script.ld"
                   )

add_custom_command(TARGET IUT_MBED_LPC1768 POST_BUILD
                   COMMAND ${ELF2BIN} -O ihex $<TARGET_FILE:IUT_MBED_LPC1768> $<TARGET_FILE:IUT_MBED_LPC1768>.hex
                   COMMAND ${ELF2BIN} -O binary $<TARGET_FILE:IUT_MBED_LPC1768> $<TARGET_FILE:IUT_MBED_LPC1768>.bin
                   COMMAND ${CMAKE_COMMAND} -E echo "-- built: $<TARGET_FILE:IUT_MBED_LPC1768>.hex"
                  )
